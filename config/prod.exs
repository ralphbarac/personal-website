import Config

# Production-specific RSS configuration overrides
config :website, :rss_env_overrides,
  # 2 hours for production (longer cache)
  cache_ttl: 7200

# Production-specific endpoint configuration
config :website, WebsiteWeb.Endpoint,
  # Note we also include the path to a cache manifest
  # containing the digested version of static files. This
  # manifest is generated by the `mix assets.deploy` task,
  # which you should run after static files are built and
  # before starting your production server.
  cache_static_manifest: "priv/static/cache_manifest.json",
  # Enable gzip compression for all static assets
  gzip: true,
  # Force SSL in production
  # force_ssl: [hsts: true],
  # Set security headers
  secure_browser_headers: %{
    "content-security-policy" =>
      "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'",
    "x-frame-options" => "DENY",
    "x-content-type-options" => "nosniff"
  }

# Configures Swoosh API Client
config :swoosh, api_client: Swoosh.ApiClient.Finch, finch_name: Website.Finch

# Disable Swoosh Local Memory Storage
config :swoosh, local: false

# Production logging configuration
config :logger,
  level: :info,
  # metadata: [:request_id, :user_id],
  backends: [:console]

# Production asset optimization
config :esbuild,
  version: "0.17.11",
  website: [
    args:
      ~w(js/app.js --bundle --target=es2017 --outdir=../priv/static/assets --external:/fonts/* --external:/images/* --minify --sourcemap),
    cd: Path.expand("../assets", __DIR__),
    env: %{"NODE_PATH" => Path.expand("../deps", __DIR__)}
  ]

config :tailwind,
  version: "3.4.3",
  website: [
    args: ~w(
      --config=tailwind.config.js
      --input=css/app.css
      --output=../priv/static/assets/app.css
      --minify
    ),
    cd: Path.expand("../assets", __DIR__)
  ]

# Runtime production configuration, including reading
# of environment variables, is done on config/runtime.exs.
